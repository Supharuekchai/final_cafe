<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jfB//QAAAABJRU5ErkJggg==
</value>
  </data>
</root>